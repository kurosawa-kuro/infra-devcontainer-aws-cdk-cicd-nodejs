<%- contentFor('body') %>
<div class="max-w-5xl mx-auto">
    <div class="mb-12">
        <h1 class="text-4xl font-bold mb-4">システム状態</h1>
        <p class="text-text text-lg">システムの健全性と機能の状態を確認できます</p>
    </div>

    <div class="grid gap-6">
        <div class="section">
            <h2 class="text-2xl font-semibold mb-6">機能一覧</h2>
            <div class="grid gap-4">
                <div class="flex items-start space-x-4 p-4 bg-bg rounded-lg">
                    <div class="flex-shrink-0">
                        <div class="w-10 h-10 rounded-full bg-green-100 flex items-center justify-center">
                            <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                            </svg>
                        </div>
                    </div>
                    <div>
                        <h3 class="font-medium">データベース接続確認</h3>
                        <p class="text-text mt-1">PostgreSQLデータベースとの接続状態を監視</p>
                    </div>
                </div>

                <div class="flex items-start space-x-4 p-4 bg-bg rounded-lg">
                    <div class="flex-shrink-0">
                        <div class="w-10 h-10 rounded-full bg-green-100 flex items-center justify-center">
                            <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                            </svg>
                        </div>
                    </div>
                    <div>
                        <h3 class="font-medium">CRUD操作の実装</h3>
                        <p class="text-text mt-1">基本的なデータ操作機能を提供</p>
                    </div>
                </div>

                <div class="flex items-start space-x-4 p-4 bg-bg rounded-lg">
                    <div class="flex-shrink-0">
                        <div class="w-10 h-10 rounded-full bg-green-100 flex items-center justify-center">
                            <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                            </svg>
                        </div>
                    </div>
                    <div>
                        <h3 class="font-medium">AWS S3への画像アップロード</h3>
                        <p class="text-text mt-1">クラウドストレージを活用した画像管理</p>
                    </div>
                </div>

                <div class="flex items-start space-x-4 p-4 bg-bg rounded-lg">
                    <div class="flex-shrink-0">
                        <div class="w-10 h-10 rounded-full bg-green-100 flex items-center justify-center">
                            <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                            </svg>
                        </div>
                    </div>
                    <div>
                        <h3 class="font-medium">PostgreSQLとPrisma</h3>
                        <p class="text-text mt-1">モダンなORMを使用したデータベース操作</p>
                    </div>
                </div>

                <div class="flex items-start space-x-4 p-4 bg-bg rounded-lg">
                    <div class="flex-shrink-0">
                        <div class="w-10 h-10 rounded-full bg-gray-100 flex items-center justify-center">
                            <svg class="w-6 h-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
                            </svg>
                        </div>
                    </div>
                    <div>
                        <h3 class="font-medium">認証・認可 (実装予定)</h3>
                        <p class="text-text mt-1">セキュアなユーザー認証システム</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="section">
            <div class="flex items-center justify-between mb-6">
                <h2 class="text-2xl font-semibold">システム状態</h2>
                <button onclick="checkHealth()" 
                        class="btn-primary flex items-center gap-2">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"/>
                    </svg>
                    ヘルスチェック実行
                </button>
            </div>
            <div class="grid gap-4">
                <div class="p-4 bg-bg rounded-lg">
                    <div class="flex items-center justify-between">
                        <div>
                            <h3 class="font-medium">API状態</h3>
                            <p class="text-text mt-1">APIサーバーの応答状態</p>
                        </div>
                        <span id="api-health" class="font-medium">未確認</span>
                    </div>
                </div>

                <div class="p-4 bg-bg rounded-lg">
                    <div class="flex items-center justify-between">
                        <div>
                            <h3 class="font-medium">データベース状態</h3>
                            <p class="text-text mt-1">データベースの接続状態</p>
                        </div>
                        <span id="db-health" class="font-medium">未確認</span>
                    </div>
                </div>

                <div class="mt-4 text-text text-right">
                    <span id="last-check"></span>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    async function checkHealth() {
        const button = document.querySelector('button');
        button.disabled = true;
        
        try {
            const [apiRes, dbRes] = await Promise.all([
                fetch('/health'),
                fetch('/health-db')
            ]);

            const [apiData, dbData] = await Promise.all([
                apiRes.json(),
                dbRes.json()
            ]);

            updateStatus('api-health', apiData.status === 'healthy');
            updateStatus('db-health', dbData.status === 'healthy');
            
            document.getElementById('last-check').textContent = 
                `最終確認: ${new Date().toLocaleString('ja-JP')}`;

        } catch (error) {
            console.error('ヘルスチェックエラー:', error);
            updateStatus('api-health', false);
            updateStatus('db-health', false);
        } finally {
            button.disabled = false;
        }
    }

    function updateStatus(elementId, isHealthy) {
        const element = document.getElementById(elementId);
        element.textContent = isHealthy ? '正常' : '異常';
        element.className = isHealthy ? 'font-medium text-green-600' : 'font-medium text-red-600';
    }
</script> 