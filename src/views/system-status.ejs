<%- contentFor('body') %>
<div class="max-w-4xl mx-auto">
    <h1 class="text-3xl font-bold text-gray-900 mb-8">システム状態</h1>

    <div class="bg-bg rounded-lg shadow-sm p-6 mb-8">
        <h2 class="text-xl font-semibold text-gray-900 mb-4">機能一覧</h2>
        <ul class="space-y-2 text-text">
            <li class="flex items-center">
                <svg class="w-5 h-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                </svg>
                データベース接続確認
            </li>
            <li class="flex items-center">
                <svg class="w-5 h-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                </svg>
                CRUD操作の実装
            </li>
            <li class="flex items-center">
                <svg class="w-5 h-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                </svg>
                AWS S3への画像アップロード
            </li>
            <li class="flex items-center">
                <svg class="w-5 h-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                </svg>
                PostgreSQLとPrisma
            </li>
            <li class="flex items-center text-text">
                <svg class="w-5 h-5 text-gray-400 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
                認証・認可 (実装予定)
            </li>
        </ul>
    </div>

    <div class="bg-bg rounded-lg shadow-sm p-6">
        <h3 class="text-xl font-semibold text-gray-900 mb-4">システム状態</h3>
        <div class="flex items-center gap-4 mb-4">
            <button onclick="checkHealth()" class="bg-primary text-white px-4 py-2 rounded hover:bg-blue-600 transition-colors">
                ヘルスチェック実行
            </button>
            <span id="last-check" class="text-text"></span>
        </div>
        <div class="space-y-2">
            <p class="flex items-center gap-2">
                API状態: <span id="api-health" class="font-medium">未確認</span>
            </p>
            <p class="flex items-center gap-2">
                データベース状態: <span id="db-health" class="font-medium">未確認</span>
            </p>
        </div>
    </div>
</div>

<script>
    async function checkHealth() {
        const button = document.querySelector('button');
        button.disabled = true;
        
        try {
            const [apiRes, dbRes] = await Promise.all([
                fetch('/health'),
                fetch('/health-db')
            ]);

            const [apiData, dbData] = await Promise.all([
                apiRes.json(),
                dbRes.json()
            ]);

            updateStatus('api-health', apiData.status === 'healthy');
            updateStatus('db-health', dbData.status === 'healthy');
            
            document.getElementById('last-check').textContent = 
                `最終確認: ${new Date().toLocaleString('ja-JP')}`;

        } catch (error) {
            console.error('ヘルスチェックエラー:', error);
            updateStatus('api-health', false);
            updateStatus('db-health', false);
        } finally {
            button.disabled = false;
        }
    }

    function updateStatus(elementId, isHealthy) {
        const element = document.getElementById(elementId);
        element.textContent = isHealthy ? '正常' : '異常';
        element.className = isHealthy ? 'font-medium text-green-600' : 'font-medium text-red-600';
    }
</script> 