<%- contentFor('body') %>
<div class="max-w-2xl mx-auto px-4">
  <div class="mb-6">
    <h1 class="text-2xl font-bold text-gray-900 dark:text-white">
      <%= profileUser.name %>のフォロー中
    </h1>
    <a href="/<%= profileUser.name || profileUser.id %>" class="text-indigo-600 hover:text-indigo-500">
      ← プロフィールに戻る
    </a>
  </div>

  <div class="bg-white dark:bg-gray-900 shadow overflow-hidden sm:rounded-lg">
    <ul class="divide-y divide-gray-200 dark:divide-gray-700">
      <% if (following && following.length > 0) { %>
        <% following.forEach(followedUser => { %>
          <li class="p-4">
            <div class="flex items-center space-x-4">
              <img 
                src="<%= followedUser.profile?.avatarPath ? `/uploads/${followedUser.profile.avatarPath}` : '/uploads/default_avatar.png' %>"
                alt="Profile Avatar"
                class="h-12 w-12 rounded-full object-cover"
              >
              <div class="flex-1">
                <a href="/<%= followedUser.name || followedUser.id %>" class="text-sm font-medium text-gray-900 dark:text-white hover:underline">
                  <%= followedUser.name %>
                </a>
                <p class="text-sm text-gray-500 dark:text-gray-400">
                  <%= followedUser.profile?.bio || '自己紹介はありません' %>
                </p>
              </div>
              <% if (user && user.id !== followedUser.id) { %>
                <button
                  class="follow-button inline-flex items-center px-3 py-1 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                  data-following="<%= followedUser.isFollowing %>"
                  data-user-id="<%= followedUser.id %>"
                >
                  <span class="follow-text" data-following="<%= followedUser.isFollowing %>">
                    <%= followedUser.isFollowing ? 'フォロー中' : 'フォロー' %>
                  </span>
                </button>
              <% } %>
            </div>
          </li>
        <% }); %>
      <% } else { %>
        <li class="p-4 text-center text-gray-500 dark:text-gray-400">
          フォローしているユーザーはいません
        </li>
      <% } %>
    </ul>
  </div>
</div>

<script>
  // CSRFトークンをヘッダーに追加する関数
  function getCSRFToken() {
    return document.cookie.split('; ')
      .find(row => row.startsWith('XSRF-TOKEN='))
      ?.split('=')[1];
  }

  // フォロー状態を切り替える関数
  async function toggleFollow(userId, button) {
    try {
      const isFollowing = button.getAttribute('data-following') === 'true';
      const url = `/users/${userId}/${isFollowing ? 'unfollow' : 'follow'}`;
      
      const response = await fetch(url, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': getCSRFToken()
        }
      });

      if (!response.ok) {
        throw new Error('フォロー操作に失敗しました');
      }

      const data = await response.json();
      
      // ボタンの状態を更新
      const newFollowingState = !isFollowing;
      button.setAttribute('data-following', newFollowingState);
      
      const followText = button.querySelector('.follow-text');
      followText.setAttribute('data-following', newFollowingState);
      followText.textContent = newFollowingState ? 'フォロー中' : 'フォロー';

    } catch (error) {
      console.error('Error:', error);
      alert('エラーが発生しました。もう一度お試しください。');
    }
  }

  // フォローボタンのクリックイベントを設定
  document.addEventListener('DOMContentLoaded', () => {
    // フォローボタンのクリックイベントを追加
    document.querySelectorAll('.follow-button').forEach(button => {
      button.addEventListener('click', () => {
        const userId = button.getAttribute('data-user-id');
        toggleFollow(userId, button);
      });
    });

    // フォローボタンのホバー処理
    const followTexts = document.querySelectorAll('.follow-text');
    followTexts.forEach(text => {
      const button = text.closest('button');
      
      button.addEventListener('mouseenter', () => {
        if (text.getAttribute('data-following') === 'true') {
          text.textContent = 'フォロー解除';
        }
      });
      
      button.addEventListener('mouseleave', () => {
        if (text.getAttribute('data-following') === 'true') {
          text.textContent = 'フォロー中';
        }
      });
    });
  });
</script> 